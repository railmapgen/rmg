System.register(["./share-legacy-h4I4eVrA.js"],(function(e,n){"use strict";var t;return{setters:[e=>{t=e.S}],execute:function(){e("g",((e,n,t)=>{const i=n[0];if(i.includes(e)){if(n.slice(1).find((n=>n.includes(e))))return 0;{const s=n.slice(1).find((n=>{const t="linestart"===n[0],s=i.indexOf(e)<i.indexOf(n.slice(-1)[0]),l="lineend"===n.slice(-1)[0],r=i.indexOf(e)>i.indexOf(n[0]);return t&&s||l&&r}));return s?1===t[s[0]].children.indexOf(s[1])?-1:1:0}}{const i=n.slice(1).find((n=>n.includes(e)));return i?"linestart"!==i[0]&&"lineend"!==i.slice(-1)[0]?1===t[i[0]].children.indexOf(i[1])?1.2:-1.2:1===t[i[0]].children.indexOf(i[1])?1:-1:0}}));const n=e=>{let n;const t=[];for(const i of e){if(n)if(i[1]===n[1])t.push("H"+i[0]);else{const e=(i[0]+n[0])/2-(0===n[1]?0:12);t.push("H"+e),i[1]>n[1]?(t.push("a6,6,0,0,1,6,6"),t.push("V"+(i[1]-6)),t.push("a6,6,0,0,0,6,6")):(t.push("a6,6,0,0,0,6,-6"),t.push("V"+(i[1]+6)),t.push("a6,6,0,0,1,6,-6")),t.push("H"+i[0])}else t.push("M"+i.join(","));n=i}return t.join(" ").replace(/( H([\d.]+))+/g," H$2")},i=e("l",((e,n)=>{let t=0;const{transfer:i}=e[n],s=i.groups.map((e=>e.lines?.length||0));return"l"===i.tick_direc&&(!s[1]&&s[0]>1&&(t+=.4),!s[1]||1===s[0]&&2===s[1]||(t+=.4)),1===s[0]&&2===s[1]&&"linestart"!==e[n].parents[0]&&"lineend"!==e[n].children[0]&&(t+=.8),2===e[n].parents.length&&(t+=.2),2===e[e[n].parents[0]].children.length&&(t+=.4),t})),s=e("r",((e,n)=>{let t=0;const{transfer:i}=e[n],s=i.groups.map((e=>e.lines?.length||0));return"r"===i.tick_direc&&(!s[1]&&s[0]>1&&(t+=.4),!s[1]||1===s[0]&&2===s[1]||(t+=.4)),1===s[0]&&2===s[1]&&"linestart"!==e[n].parents[0]&&"lineend"!==e[n].children[0]&&(t+=.8),2===e[n].children.length&&(t+=.2),2===e[e[n].children[0]].parents.length&&(t+=.4),t}));class l extends t{constructor(){super(...arguments),this.leftWideFactor=e=>i(this.stnList,e),this.rightWideFactor=e=>s(this.stnList,e)}static drawLine(e,t,i,s,l,r,h,a,c=0){const d={main:[],pass:[],sidingMain:[],sidingPass:[]};return e.forEach((u=>{const f="linestart"!==u[0]&&"lineend"!==u.slice(-1)[0];let p=(u=u.filter((e=>!["linestart","lineend"].includes(e)))).filter((e=>t[e]>=0)),g=u.filter((e=>t[e]<=0));1===p.length&&(g=u),0===p.filter((e=>-1!==g.indexOf(e))).length&&p.length&&(g[0]===u[0]?g.push(p[0]):p[0]===u[0]&&p[p.length-1]===u[u.length-1]&&g.length?(g=u,p=[]):g.unshift(p[p.length-1])),f?(d.sidingMain.push(n(p.map((e=>[l[e],r[e]])))),d.sidingPass.push(n(g.map((e=>[l[e],r[e]]))))):(d.main.push(new this({stnList:i,criticalPath:a})._linePath(p,s,e,l,r,h,a,c)),d.pass.push(new this({stnList:i,criticalPath:a})._linePath(g,s,e,l,r,h,a,c)))})),d}}e("S",l),e("a",class extends l{static drawLine(e,n,t,i,s,l,r,h,a=0){const c={main:[],pass:[],sidingMain:[],sidingPass:[]};return e.forEach((d=>{let u=(d=d.filter((e=>!["linestart","lineend"].includes(e)))).filter((e=>n[e]>=0)),f=d.filter((e=>n[e]<=0));1===u.length&&(f=d),0===u.filter((e=>-1!==f.indexOf(e))).length&&u.length&&(f[0]===d[0]?f.push(u[0]):u[0]===d[0]&&u[u.length-1]===d[d.length-1]&&f.length?(f=d,u=[]):f.unshift(u[u.length-1])),c.main.push(new this({stnList:t,criticalPath:h})._linePath(u,i,e,s,l,r,h,a)),c.pass.push(new this({stnList:t,criticalPath:h})._linePath(f,i,e,s,l,r,h,a))})),c}})}}}));
