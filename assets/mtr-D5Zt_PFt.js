import{S as c}from"./share-DY1h2zUe.js";const T=(t,i,n)=>{const h=i[0];if(h.includes(t)){if(i.slice(1).find(e=>e.includes(t)))return 0;{const e=i.slice(1).find(r=>{const s=r[0]==="linestart",o=h.indexOf(t)<h.indexOf(r.slice(-1)[0]),f=r.slice(-1)[0]==="lineend",g=h.indexOf(t)>h.indexOf(r[0]);return s&&o||f&&g});return e?n[e[0]].children.indexOf(e[1])===1?-1:1:0}}else{const e=i.slice(1).find(r=>r.includes(t));return e?e[0]!=="linestart"&&e.slice(-1)[0]!=="lineend"?n[e[0]].children.indexOf(e[1])===1?1.2:-1.2:n[e[0]].children.indexOf(e[1])===1?1:-1:0}},U=t=>{const n="a6,6,0,0,1,6,6",h="a6,6,0,0,0,6,6",e="a6,6,0,0,0,6,-6",r="a6,6,0,0,1,6,-6";let s;const o=[];for(const f of t){if(!s)o.push("M"+f.join(","));else if(f[1]===s[1])o.push("H"+f[0]);else{const g=(f[0]+s[0])/2-(s[1]===0?0:12);o.push("H"+g),f[1]>s[1]?(o.push(n),o.push("V"+(f[1]-6)),o.push(h)):(o.push(e),o.push("V"+(f[1]+6)),o.push(r)),o.push("H"+f[0])}s=f}return o.join(" ").replace(/( H([\d.]+))+/g," H$2")},p=(t,i)=>{let n=0;const{transfer:h}=t[i],e=h.groups.map(r=>{var s;return((s=r.lines)==null?void 0:s.length)||0});return h.tick_direc==="l"&&(!e[1]&&e[0]>1&&(n+=.4),e[1]&&(e[0]!==1||e[1]!==2)&&(n+=.4)),e[0]===1&&e[1]===2&&t[i].parents[0]!=="linestart"&&t[i].children[0]!=="lineend"&&(n+=.8),t[i].parents.length===2&&(n+=.2),t[t[i].parents[0]].children.length===2&&(n+=.4),n},S=(t,i)=>{let n=0;const{transfer:h}=t[i],e=h.groups.map(r=>{var s;return((s=r.lines)==null?void 0:s.length)||0});return h.tick_direc==="r"&&(!e[1]&&e[0]>1&&(n+=.4),e[1]&&(e[0]!==1||e[1]!==2)&&(n+=.4)),e[0]===1&&e[1]===2&&t[i].parents[0]!=="linestart"&&t[i].children[0]!=="lineend"&&(n+=.8),t[i].children.length===2&&(n+=.2),t[t[i].children[0]].parents.length===2&&(n+=.4),n};class _ extends c{constructor(){super(...arguments),this.leftWideFactor=i=>p(this.stnList,i),this.rightWideFactor=i=>S(this.stnList,i)}static drawLine(i,n,h,e,r,s,o,f,g=0){const N={main:[],pass:[],sidingMain:[],sidingPass:[]};return i.forEach(l=>{const u=l[0]!=="linestart"&&l.slice(-1)[0]!=="lineend";l=l.filter(d=>!["linestart","lineend"].includes(d));let a=l.filter(d=>n[d]>=0),R=l.filter(d=>n[d]<=0);a.length===1&&(R=l),a.filter(d=>R.indexOf(d)!==-1).length===0&&a.length&&(R[0]===l[0]?R.push(a[0]):a[0]===l[0]&&a[a.length-1]===l[l.length-1]&&R.length?(R=l,a=[]):R.unshift(a[a.length-1])),u?(N.sidingMain.push(U(a.map(d=>[r[d],s[d]]))),N.sidingPass.push(U(R.map(d=>[r[d],s[d]])))):(N.main.push(new this({stnList:h,criticalPath:f})._linePath(a,e,i,r,s,o,f,g)),N.pass.push(new this({stnList:h,criticalPath:f})._linePath(R,e,i,r,s,o,f,g)))}),N}}class A extends _{static drawLine(i,n,h,e,r,s,o,f,g=0){const N={main:[],pass:[],sidingMain:[],sidingPass:[]};return i.forEach(l=>{l=l.filter(R=>!["linestart","lineend"].includes(R));let u=l.filter(R=>n[R]>=0),a=l.filter(R=>n[R]<=0);u.length===1&&(a=l),u.filter(R=>a.indexOf(R)!==-1).length===0&&u.length&&(a[0]===l[0]?a.push(u[0]):u[0]===l[0]&&u[u.length-1]===l[l.length-1]&&a.length?(a=l,u=[]):a.unshift(u[u.length-1])),N.main.push(new this({stnList:h,criticalPath:f})._linePath(u,e,i,r,s,o,f,g)),N.pass.push(new this({stnList:h,criticalPath:f})._linePath(a,e,i,r,s,o,f,g))}),N}}export{_ as S,A as a,T as g,p as l,S as r};
